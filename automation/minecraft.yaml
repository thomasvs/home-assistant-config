- alias: Webhook Minecraft Minutes
  id: webhook-minecraft-minutes
  trigger:
  - platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: webhook_minecraft_minutes
  action:
  - service: shell_command.minecraft_play
  - service: input_datetime.set_datetime
    entity_id: input_datetime.minecraft_off
    data_template:
      timestamp: >
        {{ as_timestamp (now()) + [ trigger.event.data.minutes, 60] | min | int  * 60}}

- alias: Minecraft Off
  id: minecraft-off
  trigger:
    platform: time
    at: input_datetime.minecraft_off
  action:
    service: shell_command.minecraft_pause

- alias: Minecraft Off warning
  id: minecraft-off-warning
  trigger:
    platform: template
    value_template: >
      {% set time_now = as_timestamp(states('sensor.date_time').replace(',', '')) %}
      {% set alarm_time = as_timestamp(states('input_datetime.minecraft_off')) %}
      {{ time_now == alarm_time - 300 }}
  action:
    service: script.repeat_message
    data:
      media_player_entity_id:
        - media_player.kitchen_home
        - media_player.guest_bedroom_speaker
      repeat_message: Phoenix minecraft will pause

- alias: Minecraft On
  id: minecraft-on
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.minecraft_on', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
    service: shell_command.minecraft_play

- id: charge_minecraft_01
  alias: "Charge Minecraft Token 01"
  mode: single
  # Hide warnings when triggered while in delay.
  max_exceeded: silent
  variables:
    # Map scanner device ID to media player entity ID
    chargers:
      - 7736ced3e461f590e12c0b522d2ead05
    # Map tag ID to content
    tags:
      04-41-33-EA-F2-6C-80:
        token: minecraft_01
  trigger:
    platform: event
    event_type: tag_scanned
  condition:
    # Test that we support this device and tag
    - "{{ trigger.event.data.tag_id in tags }}"
      #- "{{ trigger.event.data.device_id in chargers }}"
  action:
    - service: input_boolean.turn_on
      target:
        #entity_id: "input_boolean.minecraft_01.{{ token_entity_id }}"
        #entity_id: "{{ trigger.event.data.tag_id }}"
        #entity_id: "input_boolean.{{ tags[trigger.event.data.tag_id].token }}"
        entity_id: "input_boolean.minecraft_01"
