#### TIME/DATE ##################################
- platform: time_date
  display_options:
      - 'time'
      - 'date'
- platform: worldclock
  time_zone: Etc/UTC
  name: 'UTC'
- platform: worldclock
  time_zone: America/New_York
  name: 'New York'
- platform: worldclock
  time_zone: Europe/Madrid
  name: 'Barcelona'
- platform: worldclock
  time_zone: Australia/Brisbane
  name: 'Brisbane'

# Weather prediction
- platform: yr
# thomasvs: added
  name: Weather tomorrow
  forecast: 24
  monitored_conditions:
    - symbol
    - temperature
    - humidity
    - fog
    - pressure
    - precipitation
    - windSpeed
    - cloudiness
- platform: yr
  name: Weather in 6h
  forecast: 6
  monitored_conditions:
    - symbol
    - temperature
    - humidity
    - fog
    - pressure
    - precipitation
    - windSpeed
    - cloudiness

- platform: yr
  name: Weather now
  monitored_conditions:
    - symbol
    - temperature
    - humidity
    - fog
    - pressure
    - precipitation
    - windSpeed
    - cloudiness


# thomasvs: system monitor
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_free
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: processor_use


# thomasvs: wireless tag sensors
- platform: wirelesstag
  monitored_conditions:
    temperature

# thomasvs: template sensor for desired bedroom night blinds state
- platform: template
  sensors:
    main_bedroom_night_blinds:
      friendly_name: "Main Bedroom Night Blinds"
      value_template: >-
        {% if is_state("binary_sensor.main_bedroom_window", "off") %}
          Closed
        {% elif states('sensor.weather_now_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
          Partly
        {% elif states('sensor.weather_6h_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
          Partly
        {% else %}
          Closed
        {% endif %}
      attribute_templates:
        reason: >-
          {% if is_state("binary_sensor.main_bedroom_window", "off") %}
            Closed: Window Closed
          {% elif states('sensor.weather_now_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
            Partly: Wind Speed Now High
          {% elif states('sensor.weather_6h_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
            Partly: Wind Speed 6h High
          {% else %}
            Closed: Wind Speed Low
          {% endif %}
    guest_bedroom_night_blinds:
      friendly_name: "Guest Bedroom Night Blinds"
      value_template: >-
        {% if is_state("binary_sensor.guest_bedroom_window", "off") %}
          Closed
        {% elif states('sensor.weather_now_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
          Partly
        {% elif states('sensor.weather_6h_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
          Partly
        {% else %}
          Closed
        {% endif %}
      attribute_templates:
        reason: >-
          {% if is_state("binary_sensor.guest_bedroom_window", "off") %}
            Closed: Window Closed
          {% elif states('sensor.weather_now_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
            Partly: Wind Speed Now High
          {% elif states('sensor.weather_6h_wind_speed')|float > states('input_number.max_wind_speed_closed_blinds')|float %}
            Partly: Wind Speed 6h High
          {% else %}
            Closed: Wind Speed Low
          {% endif %}
  
# thomasvs: miflora sensors
# https://www.home-assistant.io/integrations/miflora/
- platform: miflora
  mac: '80:ea:ca:89:52:75'
  name: Parsley
  force_update: true
  go_unavailable_timeout: 43200
  monitored_conditions:
    - moisture
    - light
    - temperature
    - conductivity
    - battery
- platform: miflora
  mac: '80:ea:ca:89:56:bd'
  name: Rosemary
  force_update: true
  go_unavailable_timeout: 43200
  monitored_conditions:
    - moisture
    - light
    - temperature
    - conductivity
    - battery

# thomas: average humidity sensor for non-wet rooms
- platform: template
  sensors:
    average_dry_humidity:
      friendly_name: 'Average Dry Humidity'
      unit_of_measurement: '%'
      value_template: >-
        {{
          (
            float(states.sensor.living_room_humidity.state) +
            float(states.sensor.kitchen_humidity.state) +
            float(states.sensor.guest_bedroom_humidity.state)
          ) / 3 | round(1) }}
